-- tsql
-- sanity checks for metadata stored in babelfish catalog
select owner, name from sys.babelfish_sysdatabases where name = 'rename_db_database1';
select nspname, orig_name from sys.babelfish_namespace_ext where nspname LIKE 'rename_db_database%';
select rolname, login_name, orig_username, database_name from sys.babelfish_authid_user_ext where rolname LIKE 'rename_db_database%';
select rolname, default_database_name from sys.babelfish_authid_login_ext where default_database_name LIKE 'rename_db_database%';
go
~~START~~
varchar#!#text
jdbc_user#!#rename_db_database1
~~END~~

~~START~~
varchar#!#nvarchar
rename_db_database1_dbo#!#dbo
rename_db_database1_guest#!#guest
rename_db_database1_rename_db_schema1#!#rename_db_schema1
~~END~~

~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar
rename_db_database1_dbo#!##!#dbo#!#rename_db_database1
rename_db_database1_db_owner#!##!#db_owner#!#rename_db_database1
rename_db_database1_guest#!##!#guest#!#rename_db_database1
rename_db_database1_rename_db_role1#!##!#rename_db_role1#!#rename_db_database1
rename_db_database1_rename_db_login2#!#rename_db_login2#!#rename_db_login2#!#rename_db_database1
~~END~~

~~START~~
varchar#!#nvarchar
rename_db_login1#!#rename_db_database1
~~END~~


-- sanity check
use rename_db_database1;
go
-- Renaming the current database is also allowed
alter database rename_db_database1 modify name = rename_db_database2;
go
select db_name()
go
~~START~~
nvarchar
rename_db_database2
~~END~~

use rename_db_database1;
go
~~ERROR (Code: 911)~~

~~ERROR (Message: database "rename_db_database1" does not exist)~~

use rename_db_database2;
go
alter database rename_db_database2 modify name = rename_db_database1;
go

use master
go
alter database rename_db_database1 modify name = rename_db_database2;
go
-- should return updated rows
select owner, name from sys.babelfish_sysdatabases where name LIKE 'rename_db_database%';
select nspname, orig_name from sys.babelfish_namespace_ext where nspname LIKE 'rename_db_database%';
select rolname, login_name, orig_username, database_name from sys.babelfish_authid_user_ext where rolname LIKE 'rename_db_database%';
select rolname, default_database_name from sys.babelfish_authid_login_ext where default_database_name LIKE 'rename_db_database%';
go
~~START~~
varchar#!#text
jdbc_user#!#rename_db_database2
~~END~~

~~START~~
varchar#!#nvarchar
rename_db_database2_dbo#!#dbo
rename_db_database2_guest#!#guest
rename_db_database2_rename_db_schema1#!#rename_db_schema1
~~END~~

~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar
rename_db_database2_dbo#!##!#dbo#!#rename_db_database2
rename_db_database2_db_owner#!##!#db_owner#!#rename_db_database2
rename_db_database2_guest#!##!#guest#!#rename_db_database2
rename_db_database2_rename_db_role1#!##!#rename_db_role1#!#rename_db_database2
rename_db_database2_rename_db_login2#!#rename_db_login2#!#rename_db_login2#!#rename_db_database2
~~END~~

~~START~~
varchar#!#nvarchar
rename_db_login1#!#rename_db_database2
~~END~~


-- sanity check to use db
use rename_db_database1;
go
~~ERROR (Code: 911)~~

~~ERROR (Message: database "rename_db_database1" does not exist)~~

use rename_db_database2;
go

use master
go

-- rollback changes
alter database rename_db_database2 modify name = rename_db_database1
go

-- Alter database inside transaction is not allowed
Begin Transaction;
go
alter database db1 modify name = db2
go
~~ERROR (Code: 574)~~

~~ERROR (Message: ALTER DATABASE cannot run inside a transaction block)~~

-- does not rollback transaction
select @@trancount
go
~~START~~
int
1
~~END~~

commit
go

-- Alter inside a function/procedure should fail
create function f1() returns int Begin alter database db1 modify name = db2 END
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: An ALTER database statement is not allowed in a procedure, function or trigger.)~~

create procedure p1 as alter database db1 modify name = db2
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: An ALTER database statement is not allowed in a procedure, function or trigger.)~~


-- Renaming system databases is prohibited
alter database master modify name rename_db_database1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error near 'rename_db_database1' at line 2 and character position 34)~~

alter database tempdb modify name rename_db_database1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error near 'rename_db_database1' at line 1 and character position 34)~~

alter database msdb modify name rename_db_database1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error near 'rename_db_database1' at line 1 and character position 32)~~


-- Rename a case sensitive and len>64 database name
alter database [ThisOldDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb]
 modify name = [ThisNewDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb]
go

-- should return updated rows
select owner, name from sys.babelfish_sysdatabases where name LIKE 'DatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb%';
select nspname, orig_name from sys.babelfish_namespace_ext where nspname LIKE 'DatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb%';
select rolname, login_name, orig_username, database_name from sys.babelfish_authid_user_ext where rolname LIKE 'DatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb%';
select rolname, default_database_name from sys.babelfish_authid_login_ext where default_database_name LIKE 'DatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb%';
go
~~START~~
varchar#!#text
~~END~~

~~START~~
varchar#!#nvarchar
~~END~~

~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar
~~END~~

~~START~~
varchar#!#nvarchar
~~END~~


-- sanity check to use db
use [ThisOldDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb];
go
~~ERROR (Code: 911)~~

~~ERROR (Message: database "thisolddatabasenameiscasesensit70deaa61d81bc286d3760d346a37224c" does not exist)~~

use [ThisNewDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb]
go

use master
go

-- tsql user=rename_db_login1 password=1234
use rename_db_database1
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The server principal "rename_db_login1" is not able to access the database "rename_db_database1" under the current security context)~~

-- user that does not have access to db, cannot modify name
alter database rename_db_database1 modify name = rename_db_database2;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Current login rename_db_login1 does not have permission to create new login)~~


-- tsql
-- give rename_db_login1 permission to the db
alter server role sysadmin add member rename_db_login1
go

-- tsql user=rename_db_login1 password=1234
-- should work now
alter database rename_db_database1 modify name = rename_db_database2;
go
-- connect to the database to test concurrencies
use rename_db_database2
go

-- tsql
-- should throw error since there is an active session using rename_db_database2
alter database rename_db_database2 modify name = rename_db_database1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The database could not be exclusively locked to perform the operation.)~~


-- tsql user=rename_db_login1 password=1234
-- now disconnect from that database in the 2nd connection and test alter again
select db_name()
go
~~START~~
nvarchar
rename_db_database2
~~END~~

use master
go

-- tsql
alter database rename_db_database2 modify name = rename_db_database1;
go
