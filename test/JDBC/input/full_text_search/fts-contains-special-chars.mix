create table test(id int not null, name text)
go

insert into test values (1, 'one two three'), (2, 'two three one'), (3, 'one'), (4, 'two'), (5, 'three'), (6, 'one`two'), (7, 'one~two'), (8, 'one!two'),(9, 'one@two'), (10, 'one#two'), (11, 'one$two'),(12, 'one%two'), (13, 'one^two'), (14, 'one&two'), (15, 'one*two'), (16, 'one-two'), (17, 'one_two'), (18, 'one+two'), (19, 'one=two'), (20, 'one\two'), (21, 'one|two'), (22, 'one;two'), (23, 'one:two'), (24, 'one''two'), (25, 'one<two'), (26, 'one>two'), (27, 'one.two'), (28, 'one?two'), (29, 'one/two'), (101, 'one :) two') ;
go

create unique index test_idx on test(id);
go

SELECT set_config('babelfishpg_tsql.escape_hatch_fulltext', 'ignore', 'false')
go

select sys.replace_special_chars_fts('hello@world');
go

create fulltext index on test(name) key index test_idx;
go

select * from test where contains(name, '"one           two"');
go

select * from test where contains(name, 'one''two');
select * from test where contains(name, 'one`two');
select * from test where contains(name, 'one_two');
go

select * from test where contains(name, 'one@two');
go

select * from test where contains(name, 'one#two');
go

select * from test where contains(name, 'one$two');
go

select * from test where contains(name, 'one%two');
go

select * from test where contains(name, 'one*two');
go

select * from test where contains(name, 'one-two');
go

select * from test where contains(name, 'one+two');
go

select * from test where contains(name, 'one=two');
go

select * from test where contains(name, 'one\two');
go

select * from test where contains(name, 'one;two');
go

select * from test where contains(name, 'one<two');
go

select * from test where contains(name, 'one>two');
go

select * from test where contains(name, 'one.two');
go

select * from test where contains(name, 'one?two');
go

select * from test where contains(name, 'one/two');
go

select * from test where contains(name, 'one:two');
go

select * from test where contains(name, '"one: two"');
go

-- syntax error tests
select * from test where contains(name, 'one(two');
go

select * from test where contains(name, 'one)two');
go

select * from test where contains(name, 'one{two');
go

select * from test where contains(name, 'one}two');
go

select * from test where contains(name, 'one[two');
go

select * from test where contains(name, 'one]two');
go

select * from test where contains(name, 'one(two)');
go

select * from test where contains(name, 'one{two}');
go

select * from test where contains(name, 'one[two]');
go

-- double quotes test
select * from test where contains(name, '"one(two"');
go

select * from test where contains(name, '"one)two"');
go

select * from test where contains(name, '"one{two"');
go

select * from test where contains(name, '"one}two"');
go

select * from test where contains(name, '"one[two"');
go

select * from test where contains(name, '"one]two"');
go

select * from test where contains(name, '"one(two)"');
go

select * from test where contains(name, '"one{two}"');
go

select * from test where contains(name, '"one[two]"');
go

select * from test where contains(name, '"one(two)(}[]three"');
go

select * from test where contains(name, '"one"two"');
go

select * from test where contains(name, '"one ` two"');
go

select * from test where contains(name, '"one '' two"');
go

select * from test where contains(name, '"one _ two"');
go

select * from test where contains(name, '"one : two"');
go

drop fulltext index on test;
go

drop table test;
go

use master;
go